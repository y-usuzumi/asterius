-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package asterius
@version 0.0.1

module Asterius.Internals
type IO a = HasCallStack => IO a
marshalSBS :: Pool -> ShortByteString -> IO (Ptr CChar)
marshalV :: (Storable a, Num n) => Pool -> Vector a -> IO (Ptr a, n)
encodePrim :: Prim a => a -> ShortByteString
reinterpretCast :: (Prim a, Prim b) => a -> b
collect :: (Data a, Typeable k, Eq k, Hashable k) => Proxy# k -> a -> HashSet k
encodeFile :: Serialize a => FilePath -> a -> IO ()
decodeFile :: Serialize a => FilePath -> IO a

module Asterius.Types
type BinaryenIndex = Word32
data AsteriusCodeGenError
UnsupportedCmmLit :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmInstr :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmBranch :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmType :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmWidth :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmGlobalReg :: ShortByteString -> AsteriusCodeGenError
UnsupportedCmmExpr :: ShortByteString -> AsteriusCodeGenError
UnsupportedImplicitCasting :: Expression -> ValueType -> ValueType -> AsteriusCodeGenError
AssignToImmutableGlobalReg :: UnresolvedGlobalReg -> AsteriusCodeGenError
data AsteriusStatic
UnresolvedStatic :: AsteriusEntitySymbol -> AsteriusStatic
UnresolvedOffStatic :: AsteriusEntitySymbol -> Int -> AsteriusStatic
Uninitialized :: Int -> AsteriusStatic
Serialized :: ShortByteString -> AsteriusStatic
newtype AsteriusStatics
AsteriusStatics :: Vector AsteriusStatic -> AsteriusStatics
[$sel:asteriusStatics:AsteriusStatics] :: AsteriusStatics -> Vector AsteriusStatic
data AsteriusModule
AsteriusModule :: HashMap AsteriusEntitySymbol AsteriusStatics -> HashMap AsteriusEntitySymbol AsteriusCodeGenError -> HashMap AsteriusEntitySymbol Function -> HashMap AsteriusEntitySymbol AsteriusCodeGenError -> AsteriusModule
[$sel:staticsMap:AsteriusModule] :: AsteriusModule -> HashMap AsteriusEntitySymbol AsteriusStatics
[$sel:staticsErrorMap:AsteriusModule] :: AsteriusModule -> HashMap AsteriusEntitySymbol AsteriusCodeGenError
[$sel:functionMap:AsteriusModule] :: AsteriusModule -> HashMap AsteriusEntitySymbol Function
[$sel:functionErrorMap:AsteriusModule] :: AsteriusModule -> HashMap AsteriusEntitySymbol AsteriusCodeGenError
data AsteriusModuleSymbol
AsteriusModuleSymbol :: ShortByteString -> Vector ShortByteString -> AsteriusModuleSymbol
[$sel:unitId:AsteriusModuleSymbol] :: AsteriusModuleSymbol -> ShortByteString
[$sel:moduleName:AsteriusModuleSymbol] :: AsteriusModuleSymbol -> Vector ShortByteString
newtype AsteriusEntitySymbol
AsteriusEntitySymbol :: ShortByteString -> AsteriusEntitySymbol
[$sel:entityName:AsteriusEntitySymbol] :: AsteriusEntitySymbol -> ShortByteString
data AsteriusStore
AsteriusStore :: HashMap AsteriusEntitySymbol AsteriusModuleSymbol -> HashMap AsteriusModuleSymbol AsteriusModule -> AsteriusStore
[$sel:symbolMap:AsteriusStore] :: AsteriusStore -> HashMap AsteriusEntitySymbol AsteriusModuleSymbol
[$sel:moduleMap:AsteriusStore] :: AsteriusStore -> HashMap AsteriusModuleSymbol AsteriusModule
data UnresolvedLocalReg
UniqueLocalReg :: Int -> ValueType -> UnresolvedLocalReg
QuotRemI32X :: UnresolvedLocalReg
QuotRemI32Y :: UnresolvedLocalReg
QuotRemI64X :: UnresolvedLocalReg
QuotRemI64Y :: UnresolvedLocalReg
data UnresolvedGlobalReg
VanillaReg :: Int -> UnresolvedGlobalReg
FloatReg :: Int -> UnresolvedGlobalReg
DoubleReg :: Int -> UnresolvedGlobalReg
LongReg :: Int -> UnresolvedGlobalReg
Sp :: UnresolvedGlobalReg
SpLim :: UnresolvedGlobalReg
Hp :: UnresolvedGlobalReg
HpLim :: UnresolvedGlobalReg
CCCS :: UnresolvedGlobalReg
CurrentTSO :: UnresolvedGlobalReg
CurrentNursery :: UnresolvedGlobalReg
HpAlloc :: UnresolvedGlobalReg
EagerBlackholeInfo :: UnresolvedGlobalReg
GCEnter1 :: UnresolvedGlobalReg
GCFun :: UnresolvedGlobalReg
BaseReg :: UnresolvedGlobalReg
data ValueType
None :: ValueType
I32 :: ValueType
I64 :: ValueType
F32 :: ValueType
F64 :: ValueType
Auto :: ValueType
data FunctionType
FunctionType :: ValueType -> Vector ValueType -> FunctionType
[$sel:returnType:FunctionType] :: FunctionType -> ValueType
[$sel:paramTypes:FunctionType] :: FunctionType -> Vector ValueType
data UnaryOp
ClzInt32 :: UnaryOp
CtzInt32 :: UnaryOp
PopcntInt32 :: UnaryOp
NegFloat32 :: UnaryOp
AbsFloat32 :: UnaryOp
CeilFloat32 :: UnaryOp
FloorFloat32 :: UnaryOp
TruncFloat32 :: UnaryOp
NearestFloat32 :: UnaryOp
SqrtFloat32 :: UnaryOp
EqZInt32 :: UnaryOp
ClzInt64 :: UnaryOp
CtzInt64 :: UnaryOp
PopcntInt64 :: UnaryOp
NegFloat64 :: UnaryOp
AbsFloat64 :: UnaryOp
CeilFloat64 :: UnaryOp
FloorFloat64 :: UnaryOp
TruncFloat64 :: UnaryOp
NearestFloat64 :: UnaryOp
SqrtFloat64 :: UnaryOp
EqZInt64 :: UnaryOp
ExtendSInt32 :: UnaryOp
ExtendUInt32 :: UnaryOp
WrapInt64 :: UnaryOp
TruncSFloat32ToInt32 :: UnaryOp
TruncSFloat32ToInt64 :: UnaryOp
TruncUFloat32ToInt32 :: UnaryOp
TruncUFloat32ToInt64 :: UnaryOp
TruncSFloat64ToInt32 :: UnaryOp
TruncSFloat64ToInt64 :: UnaryOp
TruncUFloat64ToInt32 :: UnaryOp
TruncUFloat64ToInt64 :: UnaryOp
ReinterpretFloat32 :: UnaryOp
ReinterpretFloat64 :: UnaryOp
ExtendS8Int32 :: UnaryOp
ExtendS16Int32 :: UnaryOp
ExtendS8Int64 :: UnaryOp
ExtendS16Int64 :: UnaryOp
ExtendS32Int64 :: UnaryOp
ConvertSInt32ToFloat32 :: UnaryOp
ConvertSInt32ToFloat64 :: UnaryOp
ConvertUInt32ToFloat32 :: UnaryOp
ConvertUInt32ToFloat64 :: UnaryOp
ConvertSInt64ToFloat32 :: UnaryOp
ConvertSInt64ToFloat64 :: UnaryOp
ConvertUInt64ToFloat32 :: UnaryOp
ConvertUInt64ToFloat64 :: UnaryOp
PromoteFloat32 :: UnaryOp
DemoteFloat64 :: UnaryOp
ReinterpretInt32 :: UnaryOp
ReinterpretInt64 :: UnaryOp
data BinaryOp
AddInt32 :: BinaryOp
SubInt32 :: BinaryOp
MulInt32 :: BinaryOp
DivSInt32 :: BinaryOp
DivUInt32 :: BinaryOp
RemSInt32 :: BinaryOp
RemUInt32 :: BinaryOp
AndInt32 :: BinaryOp
OrInt32 :: BinaryOp
XorInt32 :: BinaryOp
ShlInt32 :: BinaryOp
ShrUInt32 :: BinaryOp
ShrSInt32 :: BinaryOp
RotLInt32 :: BinaryOp
RotRInt32 :: BinaryOp
EqInt32 :: BinaryOp
NeInt32 :: BinaryOp
LtSInt32 :: BinaryOp
LtUInt32 :: BinaryOp
LeSInt32 :: BinaryOp
LeUInt32 :: BinaryOp
GtSInt32 :: BinaryOp
GtUInt32 :: BinaryOp
GeSInt32 :: BinaryOp
GeUInt32 :: BinaryOp
AddInt64 :: BinaryOp
SubInt64 :: BinaryOp
MulInt64 :: BinaryOp
DivSInt64 :: BinaryOp
DivUInt64 :: BinaryOp
RemSInt64 :: BinaryOp
RemUInt64 :: BinaryOp
AndInt64 :: BinaryOp
OrInt64 :: BinaryOp
XorInt64 :: BinaryOp
ShlInt64 :: BinaryOp
ShrUInt64 :: BinaryOp
ShrSInt64 :: BinaryOp
RotLInt64 :: BinaryOp
RotRInt64 :: BinaryOp
EqInt64 :: BinaryOp
NeInt64 :: BinaryOp
LtSInt64 :: BinaryOp
LtUInt64 :: BinaryOp
LeSInt64 :: BinaryOp
LeUInt64 :: BinaryOp
GtSInt64 :: BinaryOp
GtUInt64 :: BinaryOp
GeSInt64 :: BinaryOp
GeUInt64 :: BinaryOp
AddFloat32 :: BinaryOp
SubFloat32 :: BinaryOp
MulFloat32 :: BinaryOp
DivFloat32 :: BinaryOp
CopySignFloat32 :: BinaryOp
MinFloat32 :: BinaryOp
MaxFloat32 :: BinaryOp
EqFloat32 :: BinaryOp
NeFloat32 :: BinaryOp
LtFloat32 :: BinaryOp
LeFloat32 :: BinaryOp
GtFloat32 :: BinaryOp
GeFloat32 :: BinaryOp
AddFloat64 :: BinaryOp
SubFloat64 :: BinaryOp
MulFloat64 :: BinaryOp
DivFloat64 :: BinaryOp
CopySignFloat64 :: BinaryOp
MinFloat64 :: BinaryOp
MaxFloat64 :: BinaryOp
EqFloat64 :: BinaryOp
NeFloat64 :: BinaryOp
LtFloat64 :: BinaryOp
LeFloat64 :: BinaryOp
GtFloat64 :: BinaryOp
GeFloat64 :: BinaryOp
data HostOp
PageSize :: HostOp
CurrentMemory :: HostOp
GrowMemory :: HostOp
HasFeature :: HostOp
data AtomicRMWOp
AtomicRMWAdd :: AtomicRMWOp
AtomicRMWSub :: AtomicRMWOp
AtomicRMWAnd :: AtomicRMWOp
AtomicRMWOr :: AtomicRMWOp
AtomicRMWXor :: AtomicRMWOp
AtomicRMWXchg :: AtomicRMWOp
data Expression
Block :: ShortByteString -> Vector Expression -> ValueType -> Expression
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:bodys:Block] :: Expression -> Vector Expression
[$sel:valueType:Block] :: Expression -> ValueType
If :: Expression -> Expression
[$sel:condition:Block, $sel:ifTrue:Block, $sel:ifFalse:Block] :: Expression -> Expression
Loop :: ShortByteString -> Expression -> Expression
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:body:Block] :: Expression -> Expression
Break :: ShortByteString -> Expression -> Expression
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:condition:Block, $sel:value:Block] :: Expression -> Expression
Switch :: Vector ShortByteString -> ShortByteString -> Expression -> Expression
[$sel:names:Block] :: Expression -> Vector ShortByteString
[$sel:defaultName:Block] :: Expression -> ShortByteString
[$sel:condition:Block, $sel:value:Block] :: Expression -> Expression
Call :: AsteriusEntitySymbol -> Vector Expression -> ValueType -> Expression
[$sel:target:Block] :: Expression -> AsteriusEntitySymbol
[$sel:operands:Block] :: Expression -> Vector Expression
[$sel:valueType:Block] :: Expression -> ValueType
CallImport :: ShortByteString -> Vector Expression -> ValueType -> Expression
[$sel:target':Block] :: Expression -> ShortByteString
[$sel:operands:Block] :: Expression -> Vector Expression
[$sel:valueType:Block] :: Expression -> ValueType
CallIndirect :: Expression -> Vector Expression -> ShortByteString -> Expression
[$sel:indirectTarget:Block] :: Expression -> Expression
[$sel:operands:Block] :: Expression -> Vector Expression
[$sel:typeName:Block] :: Expression -> ShortByteString
GetLocal :: BinaryenIndex -> ValueType -> Expression
[$sel:index:Block] :: Expression -> BinaryenIndex
[$sel:valueType:Block] :: Expression -> ValueType
SetLocal :: BinaryenIndex -> Expression -> Expression
[$sel:index:Block] :: Expression -> BinaryenIndex
[$sel:value:Block] :: Expression -> Expression
TeeLocal :: BinaryenIndex -> Expression -> Expression
[$sel:index:Block] :: Expression -> BinaryenIndex
[$sel:value:Block] :: Expression -> Expression
GetGlobal :: ShortByteString -> ValueType -> Expression
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:valueType:Block] :: Expression -> ValueType
SetGlobal :: ShortByteString -> Expression -> Expression
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:value:Block] :: Expression -> Expression
Load :: Bool -> BinaryenIndex -> ValueType -> Expression -> Expression
[$sel:signed:Block] :: Expression -> Bool
[$sel:bytes:Block, $sel:offset:Block, $sel:align:Block] :: Expression -> BinaryenIndex
[$sel:valueType:Block] :: Expression -> ValueType
[$sel:ptr:Block] :: Expression -> Expression
Store :: BinaryenIndex -> Expression -> ValueType -> Expression
[$sel:bytes:Block, $sel:offset:Block, $sel:align:Block] :: Expression -> BinaryenIndex
[$sel:ptr:Block, $sel:value:Block] :: Expression -> Expression
[$sel:valueType:Block] :: Expression -> ValueType
ConstI32 :: Int32 -> Expression
ConstI64 :: Int64 -> Expression
ConstF32 :: Float -> Expression
ConstF64 :: Double -> Expression
ConstF32Bits :: Int32 -> Expression
ConstF64Bits :: Int64 -> Expression
Unary :: UnaryOp -> Expression -> Expression
[$sel:unaryOp:Block] :: Expression -> UnaryOp
[$sel:operand0:Block] :: Expression -> Expression
Binary :: BinaryOp -> Expression -> Expression
[$sel:binaryOp:Block] :: Expression -> BinaryOp
[$sel:operand0:Block, $sel:operand1:Block] :: Expression -> Expression
Select :: Expression -> Expression
[$sel:condition:Block, $sel:ifTrue:Block, $sel:ifFalse:Block] :: Expression -> Expression
Drop :: Expression -> Expression
[$sel:value:Block] :: Expression -> Expression
Return :: Expression -> Expression
[$sel:value:Block] :: Expression -> Expression
Host :: HostOp -> ShortByteString -> Vector Expression -> Expression
[$sel:hostOp:Block] :: Expression -> HostOp
[$sel:name:Block] :: Expression -> ShortByteString
[$sel:operands:Block] :: Expression -> Vector Expression
Nop :: Expression
Unreachable :: Expression
AtomicLoad :: BinaryenIndex -> ValueType -> Expression -> Expression
[$sel:bytes:Block, $sel:offset:Block] :: Expression -> BinaryenIndex
[$sel:valueType:Block] :: Expression -> ValueType
[$sel:ptr:Block] :: Expression -> Expression
AtomicStore :: BinaryenIndex -> Expression -> ValueType -> Expression
[$sel:bytes:Block, $sel:offset:Block] :: Expression -> BinaryenIndex
[$sel:ptr:Block, $sel:value:Block] :: Expression -> Expression
[$sel:valueType:Block] :: Expression -> ValueType
AtomicRMW :: AtomicRMWOp -> BinaryenIndex -> Expression -> ValueType -> Expression
[$sel:atomicRMWOp:Block] :: Expression -> AtomicRMWOp
[$sel:bytes:Block, $sel:offset:Block] :: Expression -> BinaryenIndex
[$sel:ptr:Block, $sel:value:Block] :: Expression -> Expression
[$sel:valueType:Block] :: Expression -> ValueType
AtomicCmpxchg :: BinaryenIndex -> Expression -> ValueType -> Expression
[$sel:bytes:Block, $sel:offset:Block] :: Expression -> BinaryenIndex
[$sel:ptr:Block, $sel:expected:Block, $sel:replacement:Block] :: Expression -> Expression
[$sel:valueType:Block] :: Expression -> ValueType
CFG :: RelooperRun -> Expression
[$sel:graph:Block] :: Expression -> RelooperRun
Unresolved :: AsteriusEntitySymbol -> Expression
[$sel:unresolvedSymbol:Block] :: Expression -> AsteriusEntitySymbol
UnresolvedOff :: AsteriusEntitySymbol -> Int -> Expression
[$sel:unresolvedSymbol:Block] :: Expression -> AsteriusEntitySymbol
[$sel:offset':Block] :: Expression -> Int
UnresolvedGetLocal :: UnresolvedLocalReg -> Expression
[$sel:unresolvedLocalReg:Block] :: Expression -> UnresolvedLocalReg
UnresolvedSetLocal :: UnresolvedLocalReg -> Expression -> Expression
[$sel:unresolvedLocalReg:Block] :: Expression -> UnresolvedLocalReg
[$sel:value:Block] :: Expression -> Expression
UnresolvedTeeLocal :: UnresolvedLocalReg -> Expression -> Expression
[$sel:unresolvedLocalReg:Block] :: Expression -> UnresolvedLocalReg
[$sel:value:Block] :: Expression -> Expression
UnresolvedGetGlobal :: UnresolvedGlobalReg -> Expression
[$sel:unresolvedGlobalReg:Block] :: Expression -> UnresolvedGlobalReg
UnresolvedSetGlobal :: UnresolvedGlobalReg -> Expression -> Expression
[$sel:unresolvedGlobalReg:Block] :: Expression -> UnresolvedGlobalReg
[$sel:value:Block] :: Expression -> Expression
Null :: Expression
data Function
Function :: ShortByteString -> Vector ValueType -> Expression -> Function
[$sel:functionTypeName:Function] :: Function -> ShortByteString
[$sel:varTypes:Function] :: Function -> Vector ValueType
[$sel:body:Function] :: Function -> Expression
data FunctionImport
FunctionImport :: ShortByteString -> FunctionImport
[$sel:internalName:FunctionImport, $sel:externalModuleName:FunctionImport, $sel:externalBaseName:FunctionImport, $sel:functionTypeName:FunctionImport] :: FunctionImport -> ShortByteString
data TableImport
TableImport :: ShortByteString -> TableImport
[$sel:internalName:TableImport, $sel:externalModuleName:TableImport, $sel:externalBaseName:TableImport] :: TableImport -> ShortByteString
data GlobalImport
GlobalImport :: ShortByteString -> ValueType -> GlobalImport
[$sel:internalName:GlobalImport, $sel:externalModuleName:GlobalImport, $sel:externalBaseName:GlobalImport] :: GlobalImport -> ShortByteString
[$sel:globalType:GlobalImport] :: GlobalImport -> ValueType
data FunctionExport
FunctionExport :: ShortByteString -> FunctionExport
[$sel:internalName:FunctionExport, $sel:externalName:FunctionExport] :: FunctionExport -> ShortByteString
data TableExport
TableExport :: ShortByteString -> TableExport
[$sel:internalName:TableExport, $sel:externalName:TableExport] :: TableExport -> ShortByteString
data GlobalExport
GlobalExport :: ShortByteString -> GlobalExport
[$sel:internalName:GlobalExport, $sel:externalName:GlobalExport] :: GlobalExport -> ShortByteString
data Global
Global :: ValueType -> Bool -> Expression -> Global
[$sel:valueType:Global] :: Global -> ValueType
[$sel:mutable:Global] :: Global -> Bool
[$sel:initValue:Global] :: Global -> Expression
newtype FunctionTable
FunctionTable :: Vector ShortByteString -> FunctionTable
[$sel:functionNames:FunctionTable] :: FunctionTable -> Vector ShortByteString
data DataSegment
DataSegment :: ShortByteString -> Expression -> DataSegment
[$sel:content:DataSegment] :: DataSegment -> ShortByteString
[$sel:offset:DataSegment] :: DataSegment -> Expression
data Memory
Memory :: BinaryenIndex -> ShortByteString -> Vector DataSegment -> Memory
[$sel:initialPages:Memory, $sel:maximumPages:Memory] :: Memory -> BinaryenIndex
[$sel:exportName:Memory] :: Memory -> ShortByteString
[$sel:dataSegments:Memory] :: Memory -> Vector DataSegment
data Module
Module :: HashMap ShortByteString FunctionType -> HashMap ShortByteString Function -> Vector FunctionImport -> Vector TableImport -> Vector GlobalImport -> Vector FunctionExport -> Vector TableExport -> Vector GlobalExport -> HashMap ShortByteString Global -> Maybe FunctionTable -> Maybe Memory -> Maybe ShortByteString -> Module
[$sel:functionTypeMap:Module] :: Module -> HashMap ShortByteString FunctionType
[$sel:functionMap':Module] :: Module -> HashMap ShortByteString Function
[$sel:functionImports:Module] :: Module -> Vector FunctionImport
[$sel:tableImports:Module] :: Module -> Vector TableImport
[$sel:globalImports:Module] :: Module -> Vector GlobalImport
[$sel:functionExports:Module] :: Module -> Vector FunctionExport
[$sel:tableExports:Module] :: Module -> Vector TableExport
[$sel:globalExports:Module] :: Module -> Vector GlobalExport
[$sel:globalMap:Module] :: Module -> HashMap ShortByteString Global
[$sel:functionTable:Module] :: Module -> Maybe FunctionTable
[$sel:memory:Module] :: Module -> Maybe Memory
[$sel:startFunctionName:Module] :: Module -> Maybe ShortByteString
emptyModule :: Module
data RelooperAddBlock
AddBlock :: Expression -> RelooperAddBlock
[$sel:code:AddBlock] :: RelooperAddBlock -> Expression
AddBlockWithSwitch :: Expression -> RelooperAddBlock
[$sel:code:AddBlock, $sel:condition:AddBlock] :: RelooperAddBlock -> Expression
data RelooperAddBranch
AddBranch :: ShortByteString -> Expression -> RelooperAddBranch
[$sel:to:AddBranch] :: RelooperAddBranch -> ShortByteString
[$sel:condition:AddBranch, $sel:code:AddBranch] :: RelooperAddBranch -> Expression
AddBranchForSwitch :: ShortByteString -> Vector BinaryenIndex -> Expression -> RelooperAddBranch
[$sel:to:AddBranch] :: RelooperAddBranch -> ShortByteString
[$sel:indexes:AddBranch] :: RelooperAddBranch -> Vector BinaryenIndex
[$sel:code:AddBranch] :: RelooperAddBranch -> Expression
data RelooperBlock
RelooperBlock :: RelooperAddBlock -> Vector RelooperAddBranch -> RelooperBlock
[$sel:addBlock:RelooperBlock] :: RelooperBlock -> RelooperAddBlock
[$sel:addBranches:RelooperBlock] :: RelooperBlock -> Vector RelooperAddBranch
data RelooperRun
RelooperRun :: ShortByteString -> HashMap ShortByteString RelooperBlock -> BinaryenIndex -> RelooperRun
[$sel:entry:RelooperRun] :: RelooperRun -> ShortByteString
[$sel:blockMap:RelooperRun] :: RelooperRun -> HashMap ShortByteString RelooperBlock
[$sel:labelHelper:RelooperRun] :: RelooperRun -> BinaryenIndex
instance Data.Data.Data Asterius.Types.AsteriusStore
instance GHC.Generics.Generic Asterius.Types.AsteriusStore
instance GHC.Show.Show Asterius.Types.AsteriusStore
instance Data.Data.Data Asterius.Types.AsteriusModule
instance GHC.Generics.Generic Asterius.Types.AsteriusModule
instance GHC.Show.Show Asterius.Types.AsteriusModule
instance Data.Data.Data Asterius.Types.AsteriusCodeGenError
instance GHC.Generics.Generic Asterius.Types.AsteriusCodeGenError
instance GHC.Show.Show Asterius.Types.AsteriusCodeGenError
instance GHC.Show.Show Asterius.Types.Module
instance Data.Data.Data Asterius.Types.Function
instance GHC.Generics.Generic Asterius.Types.Function
instance GHC.Show.Show Asterius.Types.Function
instance Data.Data.Data Asterius.Types.Global
instance GHC.Show.Show Asterius.Types.Global
instance GHC.Show.Show Asterius.Types.Memory
instance GHC.Show.Show Asterius.Types.DataSegment
instance Data.Data.Data Asterius.Types.RelooperAddBlock
instance GHC.Generics.Generic Asterius.Types.RelooperAddBlock
instance GHC.Show.Show Asterius.Types.RelooperAddBlock
instance Data.Data.Data Asterius.Types.Expression
instance GHC.Generics.Generic Asterius.Types.Expression
instance GHC.Show.Show Asterius.Types.Expression
instance Data.Data.Data Asterius.Types.RelooperAddBranch
instance GHC.Generics.Generic Asterius.Types.RelooperAddBranch
instance GHC.Show.Show Asterius.Types.RelooperAddBranch
instance Data.Data.Data Asterius.Types.RelooperBlock
instance GHC.Generics.Generic Asterius.Types.RelooperBlock
instance GHC.Show.Show Asterius.Types.RelooperBlock
instance Data.Data.Data Asterius.Types.RelooperRun
instance GHC.Generics.Generic Asterius.Types.RelooperRun
instance GHC.Show.Show Asterius.Types.RelooperRun
instance GHC.Show.Show Asterius.Types.FunctionTable
instance GHC.Show.Show Asterius.Types.GlobalExport
instance GHC.Show.Show Asterius.Types.TableExport
instance GHC.Show.Show Asterius.Types.FunctionExport
instance GHC.Show.Show Asterius.Types.GlobalImport
instance GHC.Show.Show Asterius.Types.TableImport
instance GHC.Show.Show Asterius.Types.FunctionImport
instance Data.Data.Data Asterius.Types.AtomicRMWOp
instance GHC.Generics.Generic Asterius.Types.AtomicRMWOp
instance GHC.Show.Show Asterius.Types.AtomicRMWOp
instance GHC.Classes.Ord Asterius.Types.AtomicRMWOp
instance GHC.Classes.Eq Asterius.Types.AtomicRMWOp
instance Data.Data.Data Asterius.Types.HostOp
instance GHC.Generics.Generic Asterius.Types.HostOp
instance GHC.Show.Show Asterius.Types.HostOp
instance GHC.Classes.Ord Asterius.Types.HostOp
instance GHC.Classes.Eq Asterius.Types.HostOp
instance Data.Data.Data Asterius.Types.BinaryOp
instance GHC.Generics.Generic Asterius.Types.BinaryOp
instance GHC.Show.Show Asterius.Types.BinaryOp
instance GHC.Classes.Ord Asterius.Types.BinaryOp
instance GHC.Classes.Eq Asterius.Types.BinaryOp
instance Data.Data.Data Asterius.Types.UnaryOp
instance GHC.Generics.Generic Asterius.Types.UnaryOp
instance GHC.Show.Show Asterius.Types.UnaryOp
instance GHC.Classes.Ord Asterius.Types.UnaryOp
instance GHC.Classes.Eq Asterius.Types.UnaryOp
instance Data.Data.Data Asterius.Types.FunctionType
instance GHC.Generics.Generic Asterius.Types.FunctionType
instance GHC.Show.Show Asterius.Types.FunctionType
instance GHC.Classes.Ord Asterius.Types.FunctionType
instance GHC.Classes.Eq Asterius.Types.FunctionType
instance Data.Data.Data Asterius.Types.UnresolvedLocalReg
instance GHC.Generics.Generic Asterius.Types.UnresolvedLocalReg
instance GHC.Show.Show Asterius.Types.UnresolvedLocalReg
instance GHC.Classes.Ord Asterius.Types.UnresolvedLocalReg
instance GHC.Classes.Eq Asterius.Types.UnresolvedLocalReg
instance Data.Data.Data Asterius.Types.ValueType
instance GHC.Generics.Generic Asterius.Types.ValueType
instance GHC.Show.Show Asterius.Types.ValueType
instance GHC.Classes.Ord Asterius.Types.ValueType
instance GHC.Classes.Eq Asterius.Types.ValueType
instance Data.Data.Data Asterius.Types.UnresolvedGlobalReg
instance GHC.Generics.Generic Asterius.Types.UnresolvedGlobalReg
instance GHC.Show.Show Asterius.Types.UnresolvedGlobalReg
instance GHC.Classes.Ord Asterius.Types.UnresolvedGlobalReg
instance GHC.Classes.Eq Asterius.Types.UnresolvedGlobalReg
instance Data.Data.Data Asterius.Types.AsteriusStatics
instance GHC.Generics.Generic Asterius.Types.AsteriusStatics
instance GHC.Show.Show Asterius.Types.AsteriusStatics
instance GHC.Classes.Ord Asterius.Types.AsteriusStatics
instance GHC.Classes.Eq Asterius.Types.AsteriusStatics
instance Data.Data.Data Asterius.Types.AsteriusStatic
instance GHC.Generics.Generic Asterius.Types.AsteriusStatic
instance GHC.Show.Show Asterius.Types.AsteriusStatic
instance GHC.Classes.Ord Asterius.Types.AsteriusStatic
instance GHC.Classes.Eq Asterius.Types.AsteriusStatic
instance Data.Hashable.Class.Hashable Asterius.Types.AsteriusEntitySymbol
instance Data.Serialize.Serialize Asterius.Types.AsteriusEntitySymbol
instance Data.String.IsString Asterius.Types.AsteriusEntitySymbol
instance GHC.Show.Show Asterius.Types.AsteriusEntitySymbol
instance GHC.Classes.Ord Asterius.Types.AsteriusEntitySymbol
instance GHC.Classes.Eq Asterius.Types.AsteriusEntitySymbol
instance Data.Data.Data Asterius.Types.AsteriusEntitySymbol
instance GHC.Generics.Generic Asterius.Types.AsteriusEntitySymbol
instance Data.Data.Data Asterius.Types.AsteriusModuleSymbol
instance GHC.Generics.Generic Asterius.Types.AsteriusModuleSymbol
instance GHC.Show.Show Asterius.Types.AsteriusModuleSymbol
instance GHC.Classes.Ord Asterius.Types.AsteriusModuleSymbol
instance GHC.Classes.Eq Asterius.Types.AsteriusModuleSymbol
instance Data.Serialize.Serialize Asterius.Types.AsteriusStore
instance GHC.Base.Semigroup Asterius.Types.AsteriusStore
instance GHC.Base.Monoid Asterius.Types.AsteriusStore
instance Data.Serialize.Serialize Asterius.Types.AsteriusModule
instance GHC.Base.Semigroup Asterius.Types.AsteriusModule
instance GHC.Base.Monoid Asterius.Types.AsteriusModule
instance Data.Serialize.Serialize Asterius.Types.AsteriusCodeGenError
instance GHC.Exception.Exception Asterius.Types.AsteriusCodeGenError
instance Data.Serialize.Serialize Asterius.Types.Function
instance Data.Serialize.Serialize Asterius.Types.Expression
instance Data.Serialize.Serialize Asterius.Types.RelooperAddBlock
instance Data.Serialize.Serialize Asterius.Types.RelooperAddBranch
instance Data.Serialize.Serialize Asterius.Types.RelooperBlock
instance Data.Serialize.Serialize Asterius.Types.RelooperRun
instance Data.Serialize.Serialize Asterius.Types.AtomicRMWOp
instance Data.Serialize.Serialize Asterius.Types.HostOp
instance Data.Serialize.Serialize Asterius.Types.BinaryOp
instance Data.Serialize.Serialize Asterius.Types.UnaryOp
instance Data.Serialize.Serialize Asterius.Types.FunctionType
instance Data.Serialize.Serialize Asterius.Types.UnresolvedLocalReg
instance Data.Hashable.Class.Hashable Asterius.Types.UnresolvedLocalReg
instance Data.Serialize.Serialize Asterius.Types.ValueType
instance Data.Hashable.Class.Hashable Asterius.Types.ValueType
instance Data.Serialize.Serialize Asterius.Types.UnresolvedGlobalReg
instance Data.Hashable.Class.Hashable Asterius.Types.UnresolvedGlobalReg
instance Data.Serialize.Serialize Asterius.Types.AsteriusStatics
instance Data.Serialize.Serialize Asterius.Types.AsteriusStatic
instance Data.Serialize.Serialize Asterius.Types.AsteriusModuleSymbol
instance Data.Hashable.Class.Hashable Asterius.Types.AsteriusModuleSymbol
instance (GHC.Classes.Eq k, Data.Hashable.Class.Hashable k, Data.Serialize.Serialize k, Data.Serialize.Serialize v) => Data.Serialize.Serialize (Data.HashMap.Base.HashMap k v)
instance Data.Serialize.Serialize a => Data.Serialize.Serialize (Data.Vector.Vector a)
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Vector.Vector a)
instance Data.Serialize.Serialize Data.ByteString.Short.Internal.ShortByteString

module Asterius.MemoryTrap
addMemoryTrap :: Data a => a -> a

module Asterius.Marshal
newtype MarshalError
UnsupportedExpression :: Expression -> MarshalError
marshalModule :: Pool -> Module -> IO BinaryenModuleRef
serializeModule :: BinaryenModuleRef -> IO ByteString
instance GHC.Show.Show Asterius.Marshal.MarshalError
instance GHC.Exception.Exception Asterius.Marshal.MarshalError

module Asterius.BuildInfo
ghc :: FilePath
mkdir :: FilePath
cp :: FilePath
node :: FilePath
sh :: FilePath
ghcLibDir :: FilePath
ahc :: FilePath
dataDir :: FilePath
packageDBStack :: PackageDBStack

module Asterius.Builtins
data BuiltinsOptions
BuiltinsOptions :: DynFlags -> Int -> Bool -> BuiltinsOptions
[dflags] :: BuiltinsOptions -> DynFlags
[nurseryGroups, threadStateSize] :: BuiltinsOptions -> Int
[tracing] :: BuiltinsOptions -> Bool
getDefaultBuiltinsOptions :: IO BuiltinsOptions
rtsAsteriusModuleSymbol :: AsteriusModuleSymbol
rtsAsteriusModule :: BuiltinsOptions -> AsteriusModule
rtsAsteriusFunctionImports :: Vector FunctionImport
rtsAsteriusFunctionExports :: Vector FunctionExport
rtsAsteriusFunctionTypeMap :: HashMap ShortByteString FunctionType
rtsAsteriusGlobalMap :: HashMap ShortByteString Global
marshalErrorCode :: Int32 -> ValueType -> Expression
errGCEnter1 :: Int32
errGCFun :: Int32
errBarf :: Int32
errStgGC :: Int32
errUnreachableBlock :: Int32
errHeapOverflow :: Int32
errMegaBlockGroup :: Int32
errUnimplemented :: Int32
errAtomics :: Int32
errMemoryTrap :: Int32
wasmPageSize :: Int
cutI64 :: Expression -> Vector Expression

module Asterius.Tracing
addTracingModule :: HashMap AsteriusEntitySymbol Int64 -> AsteriusEntitySymbol -> Function -> Function

module Asterius.Ostrich
ostrich :: Data a => a -> a

module Asterius.Resolve
resolveLocalRegs :: Data a => a -> (a, Vector ValueType)
unresolvedGlobalRegType :: UnresolvedGlobalReg -> ValueType
resolveGlobalRegs :: Data a => a -> a
data LinkReport
LinkReport :: HashMap AsteriusEntitySymbol (HashSet AsteriusEntitySymbol) -> HashSet AsteriusEntitySymbol -> HashMap AsteriusEntitySymbol Int64 -> LinkReport
[childSymbols] :: LinkReport -> HashMap AsteriusEntitySymbol (HashSet AsteriusEntitySymbol)
[unfoundSymbols, unavailableSymbols] :: LinkReport -> HashSet AsteriusEntitySymbol
[staticsSymbolMap, functionSymbolMap] :: LinkReport -> HashMap AsteriusEntitySymbol Int64
linkStart :: Bool -> Bool -> AsteriusStore -> HashSet AsteriusEntitySymbol -> (Maybe Module, LinkReport)
renderDot :: LinkReport -> Builder
writeDot :: FilePath -> LinkReport -> IO ()
instance GHC.Show.Show Asterius.Resolve.LinkReport
instance GHC.Base.Semigroup Asterius.Resolve.LinkReport
instance GHC.Base.Monoid Asterius.Resolve.LinkReport

module Asterius.Store
builtinsStore :: BuiltinsOptions -> AsteriusStore
addModule :: AsteriusModuleSymbol -> AsteriusModule -> AsteriusStore -> AsteriusStore

module Asterius.CodeGen
marshalToModuleSymbol :: Module -> AsteriusModuleSymbol
moduleSymbolPath :: FilePath -> AsteriusModuleSymbol -> FilePath -> IO FilePath
data CodeGen a
runCodeGen :: CodeGen a -> DynFlags -> Module -> Either AsteriusCodeGenError a
marshalHaskellIR :: HaskellIR -> CodeGen AsteriusModule
marshalCmmIR :: CmmIR -> CodeGen AsteriusModule
instance Control.Monad.Error.Class.MonadError Asterius.Types.AsteriusCodeGenError Asterius.CodeGen.CodeGen
instance Control.Monad.Reader.Class.MonadReader Asterius.CodeGen.CodeGenContext Asterius.CodeGen.CodeGen
instance GHC.Base.Monad Asterius.CodeGen.CodeGen
instance GHC.Base.Applicative Asterius.CodeGen.CodeGen
instance GHC.Base.Functor Asterius.CodeGen.CodeGen

module Asterius.FrontendPlugin
frontendPlugin :: FrontendPlugin

module Asterius.Boot
data BootArgs
BootArgs :: FilePath -> String -> BuiltinsOptions -> BootArgs
[bootDir] :: BootArgs -> FilePath
[configureOptions, buildOptions] :: BootArgs -> String
[builtinsOptions] :: BootArgs -> BuiltinsOptions
getDefaultBootArgs :: IO BootArgs
boot :: BootArgs -> IO ()
