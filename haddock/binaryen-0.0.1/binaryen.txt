-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package binaryen
@version 0.0.1

module Bindings.Binaryen.Raw
type BinaryenIndex = Word32
type BinaryenType = Word32
c_BinaryenTypeNone :: BinaryenType
c_BinaryenTypeInt32 :: BinaryenType
c_BinaryenTypeInt64 :: BinaryenType
c_BinaryenTypeFloat32 :: BinaryenType
c_BinaryenTypeFloat64 :: BinaryenType
c_BinaryenTypeUnreachable :: BinaryenType
c_BinaryenTypeAuto :: BinaryenType
type BinaryenExpressionId = Word32
c_BinaryenInvalidId :: BinaryenExpressionId
c_BinaryenBlockId :: BinaryenExpressionId
c_BinaryenIfId :: BinaryenExpressionId
c_BinaryenLoopId :: BinaryenExpressionId
c_BinaryenBreakId :: BinaryenExpressionId
c_BinaryenSwitchId :: BinaryenExpressionId
c_BinaryenCallId :: BinaryenExpressionId
c_BinaryenCallImportId :: BinaryenExpressionId
c_BinaryenCallIndirectId :: BinaryenExpressionId
c_BinaryenGetLocalId :: BinaryenExpressionId
c_BinaryenSetLocalId :: BinaryenExpressionId
c_BinaryenGetGlobalId :: BinaryenExpressionId
c_BinaryenSetGlobalId :: BinaryenExpressionId
c_BinaryenLoadId :: BinaryenExpressionId
c_BinaryenStoreId :: BinaryenExpressionId
c_BinaryenConstId :: BinaryenExpressionId
c_BinaryenUnaryId :: BinaryenExpressionId
c_BinaryenBinaryId :: BinaryenExpressionId
c_BinaryenSelectId :: BinaryenExpressionId
c_BinaryenDropId :: BinaryenExpressionId
c_BinaryenReturnId :: BinaryenExpressionId
c_BinaryenHostId :: BinaryenExpressionId
c_BinaryenNopId :: BinaryenExpressionId
c_BinaryenUnreachableId :: BinaryenExpressionId
c_BinaryenAtomicCmpxchgId :: BinaryenExpressionId
c_BinaryenAtomicRMWId :: BinaryenExpressionId
c_BinaryenAtomicWaitId :: BinaryenExpressionId
c_BinaryenAtomicWakeId :: BinaryenExpressionId
type BinaryenExternalKind = Word32
c_BinaryenExternalFunction :: BinaryenExternalKind
c_BinaryenExternalTable :: BinaryenExternalKind
c_BinaryenExternalMemory :: BinaryenExternalKind
c_BinaryenExternalGlobal :: BinaryenExternalKind
data BinaryenModule
type BinaryenModuleRef = Ptr BinaryenModule
c_BinaryenModuleCreate :: IO BinaryenModuleRef
c_BinaryenModuleDispose :: BinaryenModuleRef -> IO ()
data BinaryenFunctionType
type BinaryenFunctionTypeRef = Ptr BinaryenFunctionType
c_BinaryenAddFunctionType :: BinaryenModuleRef -> Ptr CChar -> BinaryenType -> Ptr BinaryenType -> BinaryenIndex -> IO BinaryenFunctionTypeRef
c_BinaryenRemoveFunctionType :: BinaryenModuleRef -> Ptr CChar -> IO ()
c_BinaryenConstInt32 :: BinaryenModuleRef -> Int32 -> IO BinaryenExpressionRef
c_BinaryenConstInt64 :: BinaryenModuleRef -> Int64 -> IO BinaryenExpressionRef
c_BinaryenConstFloat32 :: BinaryenModuleRef -> Float -> IO BinaryenExpressionRef
c_BinaryenConstFloat64 :: BinaryenModuleRef -> Double -> IO BinaryenExpressionRef
c_BinaryenConstFloat32Bits :: BinaryenModuleRef -> Int32 -> IO BinaryenExpressionRef
c_BinaryenConstFloat64Bits :: BinaryenModuleRef -> Int64 -> IO BinaryenExpressionRef
type BinaryenOp = Int32
c_BinaryenClzInt32 :: BinaryenOp
c_BinaryenCtzInt32 :: BinaryenOp
c_BinaryenPopcntInt32 :: BinaryenOp
c_BinaryenNegFloat32 :: BinaryenOp
c_BinaryenAbsFloat32 :: BinaryenOp
c_BinaryenCeilFloat32 :: BinaryenOp
c_BinaryenFloorFloat32 :: BinaryenOp
c_BinaryenTruncFloat32 :: BinaryenOp
c_BinaryenNearestFloat32 :: BinaryenOp
c_BinaryenSqrtFloat32 :: BinaryenOp
c_BinaryenEqZInt32 :: BinaryenOp
c_BinaryenClzInt64 :: BinaryenOp
c_BinaryenCtzInt64 :: BinaryenOp
c_BinaryenPopcntInt64 :: BinaryenOp
c_BinaryenNegFloat64 :: BinaryenOp
c_BinaryenAbsFloat64 :: BinaryenOp
c_BinaryenCeilFloat64 :: BinaryenOp
c_BinaryenFloorFloat64 :: BinaryenOp
c_BinaryenTruncFloat64 :: BinaryenOp
c_BinaryenNearestFloat64 :: BinaryenOp
c_BinaryenSqrtFloat64 :: BinaryenOp
c_BinaryenEqZInt64 :: BinaryenOp
c_BinaryenExtendSInt32 :: BinaryenOp
c_BinaryenExtendUInt32 :: BinaryenOp
c_BinaryenWrapInt64 :: BinaryenOp
c_BinaryenTruncSFloat32ToInt32 :: BinaryenOp
c_BinaryenTruncSFloat32ToInt64 :: BinaryenOp
c_BinaryenTruncUFloat32ToInt32 :: BinaryenOp
c_BinaryenTruncUFloat32ToInt64 :: BinaryenOp
c_BinaryenTruncSFloat64ToInt32 :: BinaryenOp
c_BinaryenTruncSFloat64ToInt64 :: BinaryenOp
c_BinaryenTruncUFloat64ToInt32 :: BinaryenOp
c_BinaryenTruncUFloat64ToInt64 :: BinaryenOp
c_BinaryenReinterpretFloat32 :: BinaryenOp
c_BinaryenReinterpretFloat64 :: BinaryenOp
c_BinaryenExtendS8Int32 :: BinaryenOp
c_BinaryenExtendS16Int32 :: BinaryenOp
c_BinaryenExtendS8Int64 :: BinaryenOp
c_BinaryenExtendS16Int64 :: BinaryenOp
c_BinaryenExtendS32Int64 :: BinaryenOp
c_BinaryenConvertSInt32ToFloat32 :: BinaryenOp
c_BinaryenConvertSInt32ToFloat64 :: BinaryenOp
c_BinaryenConvertUInt32ToFloat32 :: BinaryenOp
c_BinaryenConvertUInt32ToFloat64 :: BinaryenOp
c_BinaryenConvertSInt64ToFloat32 :: BinaryenOp
c_BinaryenConvertSInt64ToFloat64 :: BinaryenOp
c_BinaryenConvertUInt64ToFloat32 :: BinaryenOp
c_BinaryenConvertUInt64ToFloat64 :: BinaryenOp
c_BinaryenPromoteFloat32 :: BinaryenOp
c_BinaryenDemoteFloat64 :: BinaryenOp
c_BinaryenReinterpretInt32 :: BinaryenOp
c_BinaryenReinterpretInt64 :: BinaryenOp
c_BinaryenAddInt32 :: BinaryenOp
c_BinaryenSubInt32 :: BinaryenOp
c_BinaryenMulInt32 :: BinaryenOp
c_BinaryenDivSInt32 :: BinaryenOp
c_BinaryenDivUInt32 :: BinaryenOp
c_BinaryenRemSInt32 :: BinaryenOp
c_BinaryenRemUInt32 :: BinaryenOp
c_BinaryenAndInt32 :: BinaryenOp
c_BinaryenOrInt32 :: BinaryenOp
c_BinaryenXorInt32 :: BinaryenOp
c_BinaryenShlInt32 :: BinaryenOp
c_BinaryenShrUInt32 :: BinaryenOp
c_BinaryenShrSInt32 :: BinaryenOp
c_BinaryenRotLInt32 :: BinaryenOp
c_BinaryenRotRInt32 :: BinaryenOp
c_BinaryenEqInt32 :: BinaryenOp
c_BinaryenNeInt32 :: BinaryenOp
c_BinaryenLtSInt32 :: BinaryenOp
c_BinaryenLtUInt32 :: BinaryenOp
c_BinaryenLeSInt32 :: BinaryenOp
c_BinaryenLeUInt32 :: BinaryenOp
c_BinaryenGtSInt32 :: BinaryenOp
c_BinaryenGtUInt32 :: BinaryenOp
c_BinaryenGeSInt32 :: BinaryenOp
c_BinaryenGeUInt32 :: BinaryenOp
c_BinaryenAddInt64 :: BinaryenOp
c_BinaryenSubInt64 :: BinaryenOp
c_BinaryenMulInt64 :: BinaryenOp
c_BinaryenDivSInt64 :: BinaryenOp
c_BinaryenDivUInt64 :: BinaryenOp
c_BinaryenRemSInt64 :: BinaryenOp
c_BinaryenRemUInt64 :: BinaryenOp
c_BinaryenAndInt64 :: BinaryenOp
c_BinaryenOrInt64 :: BinaryenOp
c_BinaryenXorInt64 :: BinaryenOp
c_BinaryenShlInt64 :: BinaryenOp
c_BinaryenShrUInt64 :: BinaryenOp
c_BinaryenShrSInt64 :: BinaryenOp
c_BinaryenRotLInt64 :: BinaryenOp
c_BinaryenRotRInt64 :: BinaryenOp
c_BinaryenEqInt64 :: BinaryenOp
c_BinaryenNeInt64 :: BinaryenOp
c_BinaryenLtSInt64 :: BinaryenOp
c_BinaryenLtUInt64 :: BinaryenOp
c_BinaryenLeSInt64 :: BinaryenOp
c_BinaryenLeUInt64 :: BinaryenOp
c_BinaryenGtSInt64 :: BinaryenOp
c_BinaryenGtUInt64 :: BinaryenOp
c_BinaryenGeSInt64 :: BinaryenOp
c_BinaryenGeUInt64 :: BinaryenOp
c_BinaryenAddFloat32 :: BinaryenOp
c_BinaryenSubFloat32 :: BinaryenOp
c_BinaryenMulFloat32 :: BinaryenOp
c_BinaryenDivFloat32 :: BinaryenOp
c_BinaryenCopySignFloat32 :: BinaryenOp
c_BinaryenMinFloat32 :: BinaryenOp
c_BinaryenMaxFloat32 :: BinaryenOp
c_BinaryenEqFloat32 :: BinaryenOp
c_BinaryenNeFloat32 :: BinaryenOp
c_BinaryenLtFloat32 :: BinaryenOp
c_BinaryenLeFloat32 :: BinaryenOp
c_BinaryenGtFloat32 :: BinaryenOp
c_BinaryenGeFloat32 :: BinaryenOp
c_BinaryenAddFloat64 :: BinaryenOp
c_BinaryenSubFloat64 :: BinaryenOp
c_BinaryenMulFloat64 :: BinaryenOp
c_BinaryenDivFloat64 :: BinaryenOp
c_BinaryenCopySignFloat64 :: BinaryenOp
c_BinaryenMinFloat64 :: BinaryenOp
c_BinaryenMaxFloat64 :: BinaryenOp
c_BinaryenEqFloat64 :: BinaryenOp
c_BinaryenNeFloat64 :: BinaryenOp
c_BinaryenLtFloat64 :: BinaryenOp
c_BinaryenLeFloat64 :: BinaryenOp
c_BinaryenGtFloat64 :: BinaryenOp
c_BinaryenGeFloat64 :: BinaryenOp
c_BinaryenPageSize :: BinaryenOp
c_BinaryenCurrentMemory :: BinaryenOp
c_BinaryenGrowMemory :: BinaryenOp
c_BinaryenHasFeature :: BinaryenOp
c_BinaryenAtomicRMWAdd :: BinaryenOp
c_BinaryenAtomicRMWSub :: BinaryenOp
c_BinaryenAtomicRMWAnd :: BinaryenOp
c_BinaryenAtomicRMWOr :: BinaryenOp
c_BinaryenAtomicRMWXor :: BinaryenOp
c_BinaryenAtomicRMWXchg :: BinaryenOp
data BinaryenExpression
type BinaryenExpressionRef = Ptr BinaryenExpression
c_BinaryenBlock :: BinaryenModuleRef -> Ptr CChar -> Ptr BinaryenExpressionRef -> BinaryenIndex -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenIf :: BinaryenModuleRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenLoop :: BinaryenModuleRef -> Ptr CChar -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBreak :: BinaryenModuleRef -> Ptr CChar -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSwitch :: BinaryenModuleRef -> Ptr (Ptr CChar) -> BinaryenIndex -> Ptr CChar -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenCall :: BinaryenModuleRef -> Ptr CChar -> Ptr BinaryenExpressionRef -> BinaryenIndex -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenCallImport :: BinaryenModuleRef -> Ptr CChar -> Ptr BinaryenExpressionRef -> BinaryenIndex -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenCallIndirect :: BinaryenModuleRef -> BinaryenExpressionRef -> Ptr BinaryenExpressionRef -> BinaryenIndex -> Ptr CChar -> IO BinaryenExpressionRef
c_BinaryenGetLocal :: BinaryenModuleRef -> BinaryenIndex -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenSetLocal :: BinaryenModuleRef -> BinaryenIndex -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenTeeLocal :: BinaryenModuleRef -> BinaryenIndex -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenGetGlobal :: BinaryenModuleRef -> Ptr CChar -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenSetGlobal :: BinaryenModuleRef -> Ptr CChar -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenLoad :: BinaryenModuleRef -> Word32 -> Int8 -> Word32 -> Word32 -> BinaryenType -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenStore :: BinaryenModuleRef -> Word32 -> Word32 -> Word32 -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenUnary :: BinaryenModuleRef -> BinaryenOp -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBinary :: BinaryenModuleRef -> BinaryenOp -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSelect :: BinaryenModuleRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenDrop :: BinaryenModuleRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenReturn :: BinaryenModuleRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenHost :: BinaryenModuleRef -> BinaryenOp -> Ptr CChar -> Ptr BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenNop :: BinaryenModuleRef -> IO BinaryenExpressionRef
c_BinaryenUnreachable :: BinaryenModuleRef -> IO BinaryenExpressionRef
c_BinaryenAtomicLoad :: BinaryenModuleRef -> Word32 -> Word32 -> BinaryenType -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicStore :: BinaryenModuleRef -> Word32 -> Word32 -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenAtomicRMW :: BinaryenModuleRef -> BinaryenOp -> BinaryenIndex -> BinaryenIndex -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenAtomicCmpxchg :: BinaryenModuleRef -> BinaryenIndex -> BinaryenIndex -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenAtomicWait :: BinaryenModuleRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> BinaryenType -> IO BinaryenExpressionRef
c_BinaryenAtomicWake :: BinaryenModuleRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenExpressionGetId :: BinaryenExpressionRef -> IO BinaryenExpressionId
c_BinaryenExpressionGetType :: BinaryenExpressionRef -> IO BinaryenType
c_BinaryenExpressionPrint :: BinaryenExpressionRef -> IO ()
c_BinaryenBlockGetName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenBlockGetNumChildren :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenBlockGetChild :: BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenIfGetCondition :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenIfGetIfTrue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenIfGetIfFalse :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenLoopGetName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenLoopGetBody :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBreakGetName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenBreakGetCondition :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBreakGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSwitchGetNumNames :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenSwitchGetName :: BinaryenExpressionRef -> BinaryenIndex -> IO (Ptr CChar)
c_BinaryenSwitchGetDefaultName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenSwitchGetCondition :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSwitchGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenCallGetTarget :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenCallGetNumOperands :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenCallGetOperand :: BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenCallImportGetTarget :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenCallImportGetNumOperands :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenCallImportGetOperand :: BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenCallIndirectGetTarget :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenCallIndirectGetNumOperands :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenCallIndirectGetOperand :: BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenGetLocalGetIndex :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenSetLocalIsTee :: BinaryenExpressionRef -> IO CInt
c_BinaryenSetLocalGetIndex :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenSetLocalGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenGetGlobalGetName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenSetGlobalGetName :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenSetGlobalGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenHostGetOp :: BinaryenExpressionRef -> IO BinaryenOp
c_BinaryenHostGetNameOperand :: BinaryenExpressionRef -> IO (Ptr CChar)
c_BinaryenHostGetNumOperands :: BinaryenExpressionRef -> IO BinaryenIndex
c_BinaryenHostGetOperand :: BinaryenExpressionRef -> BinaryenIndex -> IO BinaryenExpressionRef
c_BinaryenLoadIsAtomic :: BinaryenExpressionRef -> IO CInt
c_BinaryenLoadIsSigned :: BinaryenExpressionRef -> IO CInt
c_BinaryenLoadGetOffset :: BinaryenExpressionRef -> IO Word32
c_BinaryenLoadGetBytes :: BinaryenExpressionRef -> IO Word32
c_BinaryenLoadGetAlign :: BinaryenExpressionRef -> IO Word32
c_BinaryenLoadGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenStoreIsAtomic :: BinaryenExpressionRef -> IO CInt
c_BinaryenStoreGetBytes :: BinaryenExpressionRef -> IO Word32
c_BinaryenStoreGetOffset :: BinaryenExpressionRef -> IO Word32
c_BinaryenStoreGetAlign :: BinaryenExpressionRef -> IO Word32
c_BinaryenStoreGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenStoreGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenConstGetValueI32 :: BinaryenExpressionRef -> IO Int32
c_BinaryenConstGetValueI64 :: BinaryenExpressionRef -> IO Int64
c_BinaryenConstGetValueI64Low :: BinaryenExpressionRef -> IO Int32
c_BinaryenConstGetValueI64High :: BinaryenExpressionRef -> IO Int32
c_BinaryenConstGetValueF32 :: BinaryenExpressionRef -> IO CFloat
c_BinaryenConstGetValueF64 :: BinaryenExpressionRef -> IO CDouble
c_BinaryenUnaryGetOp :: BinaryenExpressionRef -> IO BinaryenOp
c_BinaryenUnaryGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBinaryGetOp :: BinaryenExpressionRef -> IO BinaryenOp
c_BinaryenBinaryGetLeft :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenBinaryGetRight :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSelectGetIfTrue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSelectGetIfFalse :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenSelectGetCondition :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenDropGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenReturnGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicRMWGetOp :: BinaryenExpressionRef -> IO BinaryenOp
c_BinaryenAtomicRMWGetBytes :: BinaryenExpressionRef -> IO Word32
c_BinaryenAtomicRMWGetOffset :: BinaryenExpressionRef -> IO Word32
c_BinaryenAtomicRMWGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicRMWGetValue :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicCmpxchgGetBytes :: BinaryenExpressionRef -> IO Word32
c_BinaryenAtomicCmpxchgGetOffset :: BinaryenExpressionRef -> IO Word32
c_BinaryenAtomicCmpxchgGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicCmpxchgGetExpected :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicCmpxchgGetReplacement :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicWaitGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicWaitGetExpected :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicWaitGetTimeout :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicWaitGetExpectedType :: BinaryenExpressionRef -> IO BinaryenType
c_BinaryenAtomicWakeGetPtr :: BinaryenExpressionRef -> IO BinaryenExpressionRef
c_BinaryenAtomicWakeGetWakeCount :: BinaryenExpressionRef -> IO BinaryenExpressionRef
data BinaryenFunction
type BinaryenFunctionRef = Ptr BinaryenFunction
c_BinaryenAddFunction :: BinaryenModuleRef -> Ptr CChar -> BinaryenFunctionTypeRef -> Ptr BinaryenType -> BinaryenIndex -> BinaryenExpressionRef -> IO BinaryenFunctionRef
c_BinaryenGetFunction :: BinaryenModuleRef -> Ptr CChar -> IO BinaryenFunctionRef
c_BinaryenRemoveFunction :: BinaryenModuleRef -> Ptr CChar -> IO ()
data BinaryenImport
type BinaryenImportRef = Ptr BinaryenImport
c_BinaryenAddFunctionImport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> Ptr CChar -> BinaryenFunctionTypeRef -> IO BinaryenImportRef
c_BinaryenAddTableImport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> Ptr CChar -> IO BinaryenImportRef
c_BinaryenAddMemoryImport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> Ptr CChar -> IO BinaryenImportRef
c_BinaryenAddGlobalImport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> Ptr CChar -> BinaryenType -> IO BinaryenImportRef
c_BinaryenRemoveImport :: BinaryenModuleRef -> Ptr CChar -> IO ()
data BinaryenExport
type BinaryenExportRef = Ptr BinaryenExport
c_BinaryenAddFunctionExport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> IO BinaryenExportRef
c_BinaryenAddTableExport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> IO BinaryenExportRef
c_BinaryenAddMemoryExport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> IO BinaryenExportRef
c_BinaryenAddGlobalExport :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> IO BinaryenExportRef
c_BinaryenRemoveExport :: BinaryenModuleRef -> Ptr CChar -> IO ()
data BinaryenGlobal
type BinaryenGlobalRef = Ptr BinaryenGlobal
c_BinaryenAddGlobal :: BinaryenModuleRef -> Ptr CChar -> BinaryenType -> Int8 -> BinaryenExpressionRef -> IO BinaryenGlobalRef
c_BinaryenSetFunctionTable :: BinaryenModuleRef -> Ptr BinaryenFunctionRef -> BinaryenIndex -> IO ()
c_BinaryenSetMemory :: BinaryenModuleRef -> BinaryenIndex -> BinaryenIndex -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr BinaryenExpressionRef -> Ptr BinaryenIndex -> BinaryenIndex -> IO ()
c_BinaryenSetStart :: BinaryenModuleRef -> BinaryenFunctionRef -> IO ()
c_BinaryenModuleParse :: Ptr CChar -> IO BinaryenModuleRef
c_BinaryenModulePrint :: BinaryenModuleRef -> IO ()
c_BinaryenModulePrintAsmjs :: BinaryenModuleRef -> IO ()
c_BinaryenModuleValidate :: BinaryenModuleRef -> IO CInt
c_BinaryenModuleOptimize :: BinaryenModuleRef -> IO ()
c_BinaryenGetOptimizeLevel :: IO CInt
c_BinaryenSetOptimizeLevel :: CInt -> IO ()
c_BinaryenGetShrinkLevel :: IO CInt
c_BinaryenSetShrinkLevel :: CInt -> IO ()
c_BinaryenGetDebugInfo :: IO CInt
c_BinaryenSetDebugInfo :: CInt -> IO ()
c_BinaryenModuleRunPasses :: BinaryenModuleRef -> Ptr (Ptr CChar) -> BinaryenIndex -> IO ()
c_BinaryenModuleAutoDrop :: BinaryenModuleRef -> IO ()
c_BinaryenModuleWrite :: BinaryenModuleRef -> Ptr CChar -> CSize -> IO CSize
c_BinaryenModuleWriteWithSourceMapMut :: BinaryenModuleRef -> Ptr CChar -> Ptr CChar -> CSize -> Ptr CChar -> CSize -> Ptr CSize -> Ptr CSize -> IO ()
c_BinaryenModuleAllocateAndWriteMut :: BinaryenModuleRef -> Ptr CChar -> Ptr (Ptr ()) -> Ptr CSize -> Ptr (Ptr CChar) -> IO ()
c_BinaryenModuleRead :: Ptr CChar -> CSize -> IO BinaryenModuleRef
c_BinaryenModuleInterpret :: BinaryenModuleRef -> IO ()
c_BinaryenModuleAddDebugInfoFileName :: BinaryenModuleRef -> Ptr CChar -> IO BinaryenIndex
c_BinaryenModuleGetDebugInfoFileName :: BinaryenModuleRef -> BinaryenIndex -> IO (Ptr CChar)
c_BinaryenFunctionTypeGetName :: BinaryenFunctionTypeRef -> IO (Ptr CChar)
c_BinaryenFunctionTypeGetNumParams :: BinaryenFunctionTypeRef -> IO BinaryenIndex
c_BinaryenFunctionTypeGetParam :: BinaryenFunctionTypeRef -> BinaryenIndex -> IO BinaryenType
c_BinaryenFunctionTypeGetResult :: BinaryenFunctionTypeRef -> IO BinaryenType
c_BinaryenFunctionGetName :: BinaryenFunctionRef -> IO (Ptr CChar)
c_BinaryenFunctionGetType :: BinaryenFunctionRef -> IO (Ptr CChar)
c_BinaryenFunctionGetNumParams :: BinaryenFunctionRef -> IO BinaryenIndex
c_BinaryenFunctionGetParam :: BinaryenFunctionRef -> BinaryenIndex -> IO BinaryenType
c_BinaryenFunctionGetResult :: BinaryenFunctionRef -> IO BinaryenType
c_BinaryenFunctionGetNumVars :: BinaryenFunctionRef -> IO BinaryenIndex
c_BinaryenFunctionGetVar :: BinaryenFunctionRef -> BinaryenIndex -> IO BinaryenType
c_BinaryenFunctionGetBody :: BinaryenFunctionRef -> IO BinaryenExpressionRef
c_BinaryenFunctionOptimize :: BinaryenFunctionRef -> BinaryenModuleRef -> IO ()
c_BinaryenFunctionRunPasses :: BinaryenFunctionRef -> BinaryenModuleRef -> Ptr (Ptr CChar) -> BinaryenIndex -> IO ()
c_BinaryenFunctionSetDebugLocation :: BinaryenFunctionRef -> BinaryenExpressionRef -> BinaryenIndex -> BinaryenIndex -> BinaryenIndex -> IO ()
c_BinaryenImportGetKind :: BinaryenImportRef -> IO BinaryenExternalKind
c_BinaryenImportGetModule :: BinaryenImportRef -> IO (Ptr CChar)
c_BinaryenImportGetBase :: BinaryenImportRef -> IO (Ptr CChar)
c_BinaryenImportGetName :: BinaryenImportRef -> IO (Ptr CChar)
c_BinaryenImportGetGlobalType :: BinaryenImportRef -> IO BinaryenType
c_BinaryenImportGetFunctionType :: BinaryenImportRef -> IO (Ptr CChar)
c_BinaryenExportGetKind :: BinaryenExportRef -> IO BinaryenExternalKind
c_BinaryenExportGetName :: BinaryenExportRef -> IO (Ptr CChar)
c_BinaryenExportGetValue :: BinaryenExportRef -> IO (Ptr CChar)
data Relooper
type RelooperRef = Ptr Relooper
data RelooperBlock
type RelooperBlockRef = Ptr RelooperBlock
c_RelooperCreate :: IO RelooperRef
c_RelooperAddBlock :: RelooperRef -> BinaryenExpressionRef -> IO RelooperBlockRef
c_RelooperAddBranch :: RelooperBlockRef -> RelooperBlockRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO ()
c_RelooperAddBlockWithSwitch :: RelooperRef -> BinaryenExpressionRef -> BinaryenExpressionRef -> IO RelooperBlockRef
c_RelooperAddBranchForSwitch :: RelooperBlockRef -> RelooperBlockRef -> Ptr BinaryenIndex -> BinaryenIndex -> BinaryenExpressionRef -> IO ()
c_RelooperRenderAndDispose :: RelooperRef -> RelooperBlockRef -> BinaryenIndex -> BinaryenModuleRef -> IO BinaryenExpressionRef
c_BinaryenSetAPITracing :: CInt -> IO ()
c_BinaryenGetFunctionTypeBySignature :: BinaryenModuleRef -> BinaryenType -> Ptr BinaryenType -> BinaryenIndex -> IO BinaryenFunctionTypeRef
